[
["prelude.html", "Robot In A Can Guidebook 1 Prelude", " Robot In A Can Guidebook Benjamin Douek 1 Prelude The Official Robot In A Can Guidebook First Edition Alpha Guidebook, Robot In A Can Inc. Official Guidebook 1.0, Copyright Robot In A Can 2018, All Rights Reserved It is the year 2184… You are a researcher of the unknown from the future. You come across a mysterious can… With a blinding flash of light the can begins to open… What is this can? Could it contain the secrets of advanced technology from a time long ago? The can lies open in front of you… This guidebook will help you learn the basics you will need to master the concepts that govern the digital world. Build your very own robots and computerized projects. Use recycled materials and parts available to you to build something new. The future is in your hands… The Maker Movement The maker movement is a social movement with an artisan spirit. Maker culture emphasizes learning-through-doing (active learning) in a social environment. Maker culture emphasizes informal, networked, peer-led, and shared learning motivated by fun and self-fulfilment.[4] Maker culture encourages novel applications of technologies, and the exploration of intersections between traditionally separate domains and ways of working including metal-working, calligraphy, filmmaking, and computer programming. Community interaction and knowledge sharing are often mediated through networked technologies, with websites and social media tools forming the basis of knowledge repositories and a central channel for information sharing and exchange of ideas, and focused through social meetings in shared spaces such as hackspaces. Maker culture has attracted the interest of educators concerned about students’ disengagement from STEM subjects (science, technology, engineering and mathematics) informal educational settings. Maker culture is seen as having the potential to contribute to a more participatory approach and create new pathways into topics that will make them more alive and relevant to learners. -Wikipedia "],
["what-is-a-microcontroller.html", "1.1 What is a microcontroller", " 1.1 What is a microcontroller Microcontrollers are small computers that at the heart of many consumer products, and other computer automated devices. These small computers are used in industrial equipment, in microwaves, dishwashers, farms, medical applications, smart watches, coffee machines, exercise equipment. wherever computer automation is needed you can find a microcontroller. The Robot In A Can microcontroller is called The EveBrain and it has a WiFi radio built in so it can also connect to the internet. The EveBrain can be used in a wide variety of applications! You will need to put it together and program it to build the project you have in mind. Read this guide to get an idea of how it works and how you might use it! There are so many different ways to make things using materials you can find almost anywhere. Or you can even practice the art of sourcing rare parts to build your specialized projects. You can check out our website for more resources: www.robotinacan.com "],
["examples-of-what-you-can-build-and-do.html", "1.2 Examples of what you can build and do", " 1.2 Examples of what you can build and do "],
["whats-in-the-can.html", "1.3 What’s In The Can", " 1.3 What’s In The Can You begin to remove the contents of the can to see what is inside… The EveBrain 1.5 The EveBrain 1.5 The EveBrain 1.5 The EveBrain 1.5 "],
["whats-on-the-board.html", "1.4 What’s On The Board", " 1.4 What’s On The Board This is the EveBrain 1.5 and everything on that is on the circuit board GPIO Pins: General Purpose Input/Output pins. These connector pins are wired directly into the computer on the chip. Connecting wires into these holes allows you to connect components straight to the center of the brain, the computer. Power Port: Plug the battery pack here. USB Port: To use this connect GPIO-0 to GND to turn the board into programming mode. SPI Port: This is for connecting advanced complex sensors, displays, and other complex external devices. Connection Bay Pins BreadBoard: Breadboards are very common, but they are not made out of bread. Do not try to make a sandwich with them. They are actually made up of a grid of holes. This allows you to connect components by simply snapping them in. On/Off Switch: Turn it on, but don’t forget to turn it off when you’re done! Motor Driver: Control two stepper motors using this motor driver. By wiring up the driver circuit and plugging in the motors to the connectors you can control precision motors! Servo Motor: This is for a Servo Motor, that can move with percision up to 180 degrees. This is the EveBrain 1.5 and everything on that is on the circuit board RGB LED: Red Green and Blue Light Emitting Diode. You might know the primary colors as Red Yellow and Blue. but with light the primary colors are different. These colored lights can be mixed to make over 200 different colors. Light Sensor: This electronic eye can see light. It is like a gate that opens wider when photons (light) hits its surface. D-Pad: These four buttons are positioned to make a directional controller. They are switches that can stop or start the flow of electricity. The buttons are wired up to the four connector pins nearby, one button for each pin. Batteries: 4 X AA ESP8266: This is the computer that controls all of the electronics. It is the thinking part of the brain chip. You can see a squiggly line on the end of this chip, that is the WiFi antenna for radio communication with other computing devices. There is also a blue light that will flash when the chip turns on. ** Special Note** This computer has lots of tiny metal legs, these legs are connected to the GPIO bay on the other side of the board. It is through these legs that the computer can control other devices. You can see the connections on the circuit board, those lines are like little super thin wires on the glued to the surface of the board! "],
["getting-started.html", "2 Getting Started", " 2 Getting Started Let’s Get Started! "],
["connecting-to-snap.html", "2.1 Connecting To Snap", " 2.1 Connecting To Snap Step By Step Details: To Connect: Step 1 - Turn EveBrain On. Step 2 - Connect to the EveBrain WiFi Network using a laptop (If it doesn’t come up right away try refreshing the list of WiFi networks around you). Step 3 - Open index.html from the Snap! folder you downloaded Step 4 - Click Configure EveBrain connection at the top right of the screen. Type 192.168.4.1 into the box, that should be the default IP address for the EveBrain. Press okay. It should then turn green and say “Connected to EveBrain”. You are now connected! It’s time to start Coding… Quick connect guide Download Now Video Connection Guide 192.168.4.1, What is that about? That number is the Internet Protocol address or IP address of the EveBrain. This address lets Snap know how to communicate with the EveBrain. It’s like a phone number for Snap to chat with the EveBrain, and they can send and receive information between them. When you connect directly to the EveBrain over WiFi the EveBrain uses the number 192.168.4.1 This is its ‘phone number’ on the EveBrain WiFi network. The EveBrain can also connect to other networks. You can set it up to connect to your home WiFi. If it does it will have a different ‘phone number’ or IP address on that network, because on other networks that number is given out by a router (you know the black box that gives your house WiFi) and the router gets to choose the address of each computer connected to it. "],
["blink-an-led.html", "2.2 Blink An LED", " 2.2 Blink An LED Video Guide Code Screenshots Drag to the desired GPIO pin and then choose On or Off Code for LED Blink, one second on, one second off, repeat "],
["using-snap.html", "2.3 Using Snap!", " 2.3 Using Snap! This is the layout of the Snap! BYOB platform Use Snap! to drag and drop code blocks in sequence. The order of the blocks will determine the order in which the commands happen. Making programs with snap is like making a list of commands. The first thing on the list will happen first then the second, and so on… Note When following code diagrams, the color of the block shows which section it came from! For more information about snap consult: https://snap.berkeley.edu/SnapManual.pdf "],
["troubleshooting-connection.html", "2.4 Troubleshooting Connection", " 2.4 Troubleshooting Connection Lost or hanging connection: 1 - Refresh page 2 - Close the Google Chrome tab then reopen it. (You might want to copy the URL, also you will have to reconnect to the kit after you reopen the page) 3 - Check WiFi connection 4 - Turn the kit Off then back On. Reconnect. Notes: You are not connected to the internet when you connect to the EveBrain network if it says limited connection everything is okay! Please use Google Chrome for best results If you lose connection refresh the page. "],
["downloads.html", "2.5 Downloads", " 2.5 Downloads Find All Downloadable Resources on GitHub https://github.com/Robot-In-A-Can/ "],
["building-the-robot.html", "3 Building The Robot", " 3 Building The Robot Caption for the picture. "],
["using-stepper-motors.html", "3.1 Using Stepper Motors", " 3.1 Using Stepper Motors Servo and Stepper Motors "],
["assemble-shoni.html", "3.2 Assemble Shoni", " 3.2 Assemble Shoni Caption for the picture. "],
["programming-the-robot.html", "3.3 Programming the Robot", " 3.3 Programming the Robot "],
["the-basics.html", "4 The Basics", " 4 The Basics Systems &amp; Systems Thinking Systems are important! They are all around us, some involve technology some don’t. At their most basic all systems can be broken down into three steps. Input-&gt;Process-&gt;Output. Think of a car factory… Materials come in (input), the factory does a bunch of stuff to the materials (processing), cars come off the production line (output). This is a very large view of a car factory though, if we look closer we will see that in the factory there are lots of small systems attached to each other. Like one small system might make the tires, and that system might be attached to the system that makes the wheels… etc If we looked at the kettle as a system, we might say that it takes water as an input, starts the boiling process, and delivers boiled water as and output to the teapot… The output of one system might be considered the input of another system. For example if I speak, for me that is an output, but if you are listening to what I say, to you my speech is an input. it’s all a matter of perspective. Complex systems with lots of Inputs and outputs put together. "],
["binary-inputoutput-and-digital-signals.html", "4.1 Binary Input/Output and Digital Signals", " 4.1 Binary Input/Output and Digital Signals Input -&gt; Processing -&gt; Output. Computers are very complex systems with lots of inputs and outputs. Computers can only use input or send output in the form of binary. 1 or 0. That’s it. But by sending lots of 1’s and 0’s very quickly they can do very complex things, like showing a youtube video on your screen. That is all done with 1’s and 0’s moving very fast inside the processor and it ends up as video on your screen! Computer processors have what are called GPIO pins, or General Purpose Input Output pins. This lets them send (output), and listen (input), to electronic signals. Let’s look at the electronics of a Binary Signal in the graph below: This is called a square wave, this is what you can see when analysing digital signals on circuit boards So let’s imagine this as electricity going over a wire. The computer can control the electricity it is sending, and it can also listen for electricity when it comes into its wires. So the graph above can be imagined as an input or as an output. When there is electricity the graph goes high (1), up to +5v of electricity, when there is no electricity the graph goes low (0) or 0v. The computer can also control how long it sends signals, so it can make complex patterns of 1’s and 0’s to make codes. a little bit like morse code. Diagram of EveBrain GPIO: "],
["blink-rgb.html", "4.2 Blink RGB", " 4.2 Blink RGB Code Screenshot Drag to the desired GPIO pin and then choose On or Off "],
["button-input.html", "4.3 Button Input", " 4.3 Button Input "],
["gpio-the-cpu.html", "4.4 GPIO &amp; the CPU", " 4.4 GPIO &amp; the CPU "],
["circuits-led-and-breadboard.html", "4.5 Circuits LED and Breadboard", " 4.5 Circuits LED and Breadboard Circuits must be connected to both the positive and negative to allow electricity to flow "],
["getting-fancy.html", "5 Getting Fancy ", " 5 Getting Fancy "],
["analog-input.html", "5.1 Analog Input", " 5.1 Analog Input "],
["pulse-width-modulation.html", "5.2 Pulse Width Modulation", " 5.2 Pulse Width Modulation "],
["sensors.html", "5.3 Sensors", " 5.3 Sensors A few sensors for the Robot In A Can Kit "],
["resources.html", "6 Resources ", " 6 Resources "],
["sensor-library-component-dictionary.html", "6.1 Sensor Library &amp; Component Dictionary", " 6.1 Sensor Library &amp; Component Dictionary "],
["final-frontier.html", "6.2 Final Frontier", " 6.2 Final Frontier "],
["using-the-robot-in-a-can-kit-with-the-arduino-ide.html", "6.3 Using the Robot In A Can kit with the Arduino IDE", " 6.3 Using the Robot In A Can kit with the Arduino IDE Prerequisites Arduino 1.6.8, get it from Arduino website. Internet connection Instructions Start Arduino and open Preferences window. Enter http://arduino.esp8266.com/stable/package_esp8266com_index.json into Additional Board Manager URLs field. You can add multiple URLs, separating them with commas. Board Manager URLs field Open Boards Manager from Tools &gt; Board menu and find esp8266 platform. Select the version you need from a drop-down box. Click install button. Install ESP8266 Core Libraries for Arduino Don’t forget to select your ESP8266 board from Tools &gt; Board menu after installation. You may optionally use staging boards manager package link: http://arduino.esp8266.com/staging/package_esp8266com_index.json. This may contain some new features, but at the same time, some things might be broken. "],
["more-resources.html", "6.4 More Resources…", " 6.4 More Resources… https://arduino-esp8266.readthedocs.io/en/latest/ https://www.instructables.com/ https://www.hackster.io/ https://hackaday.com/ https://www.arduino.cc/ https://learn.adafruit.com/ https://learn.sparkfun.com/ https://www.geekfactory.mx/ http://breakerslab.org https://www.howstuffworks.com/ https://makezine.com/ https://learn.sparkfun.com/tutorials/esp8266-thing-hookup-guide/installing-the-esp8266-arduino-addon bookdown::render_book(“robotinacanGuide.Rmd”) "]
]
